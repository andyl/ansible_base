---

# ----- detect Network interface 

- name: Detect Network interface
  shell: |
    ip -o link show | awk -F': ' '{print $2}' | grep -E '^(wlp|eno|eth|ens|enp)'
  register: interface_detection
  changed_when: false
  failed_when: false

- name: Set detected Network interface
  set_fact:
    nw_interface: "{{ interface_detection.stdout_lines[0] }}"
  when: interface_detection.stdout_lines | length > 0

- name: Check if Network interface is present
  fail:
    msg: "No Network interface detected. Exiting playbook."
  when: interface_detection.stdout_lines | length == 0

- name: Echo Network interface 
  debug: 
    msg: "The nw_interface is: {{ nw_interface }}"

# ----- detect Network renderer 

- name: Detect system type and set Network renderer
  block:

    - name: Gather facts about the system
      ansible.builtin.setup:
        gather_subset:
          - '!all'
          - 'distribution'

    - name: Check if system is Xubuntu Desktop
      ansible.builtin.set_fact:
        nw_renderer: "NetworkManager"
      when: 
        - ansible_distribution == "Ubuntu"
        - ansible_lsb.description is defined
        - "'Xubuntu' in ansible_lsb.description"

    - name: Check if system is Ubuntu Server
      ansible.builtin.set_fact:
        nw_renderer: "networkd"
      when: 
        - ansible_distribution == "Ubuntu"
        - ansible_lsb.description is defined
        - "'Server' in ansible_lsb.description"

    - name: Debug nw_renderer value
      ansible.builtin.debug:
        var: nw_renderer
      when: nw_renderer is defined 

# ----- Install Dependencies 

- name: install networking packages
  become: true
  apt:
    name:
      - bridge-utils
      - network-manager
      - net-tools
    state: present
    update_cache: yes

# ----- Write config files 

- name: create netconf directory
  file: 
    path: "/home/{{gen_user}}/.netconf/{{inventory_hostname}}/backup"
    state: directory 
    group: "{{gen_user}}"
    owner: "{{gen_user}}"

- name: create netplan directory 
  file: 
    path: /etc/netplan 
    state: directory
    owner: root 
    group: root 
  become: true 
  
- name: remove old config files 
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /home/{{gen_user}}/.netconf/{{inventory_hostname}}/99-ovs-bridge.yaml

- name: Write netplan configuration file 
  template:
    src: netplan.yaml.j2 
    dest: /home/{{gen_user}}/.netconf/{{inventory_hostname}}/99-bridge.yaml

