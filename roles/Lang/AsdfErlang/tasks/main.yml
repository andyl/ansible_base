---

# AsdfErlang
#
# This works but compiles erlang from scratch - SLOW

# - name: install asdf_erlang
#   command: "bash -ilc 'asdf install erlang {{ erlang_vsn }}'"
#   args:
#     creates: "/home/{{gen_user}}/.asdf/installs/erlang/{{ erlang_vsn }}"
#     chdir: "/home/{{ gen_user }}"
#   become_user: "{{ gen_user }}"

# Accelerate with pre-cached language versions.
#
# Before ASDF INSTALL, install compile support for `:observer.start()`.  See
# `https://github.com/asdf-vm/asdf-erlang#before-asdf-install`.
#
# Approach:
# - manually install on a base machine
# - copy the language image to `cblob`
# - then make the ansible role download rather than compile
# - then re-shim to create language shims
#
# Compiling Erlang using ASDF on a new Ubuntu machine - dependencies.
#
# apt-get -y install build-essential autoconf m4 libncurses5-dev
# libwxgtk3.0-gtk3-dev libwxgtk-webview3.0-gtk3-dev libgl1-mesa-dev
# libglu1-mesa-dev libpng-dev libssh-dev unixodbc-dev xsltproc fop
# libxml2-utils libncurses-dev openjdk-11-jdk
#
# apt-get -y install erlang-wx xsltproc libglut3-dev libxml2-utils openssl libcrypto 

- name: "install plugins for {{gen_user}}"
  command: "bash -ilc 'asdf plugin-add {{ item.name }} {{item.repo}}'"
  args:
    creates: "/home/{{gen_user}}/.asdf/plugins/{{ item.name }}"
    chdir: "/home/{{gen_user}}"
  become_user: "{{ gen_user }}"
  ignore_errors: true
  with_items:
    - { name: erlang , repo: ""} 

# https://blog.differentpla.net/blog/2019/01/30/erlang-build-prerequisites/
- name: add support packages
  apt: pkg={{item}} state=latest force=yes
  ignore_errors: true
  with_items:
    - libwxgtk-webview3.0-gtk3-0v5  # wxWidgets 
    - libwxgtk-webview3.0-gtk3-dev  # wxWidgets
    - default-jdk                   # jdk 
    - unixodbc-dev                  # odbc 
    - xsltproc                      # documentation 
    - fop                           # documentation
    - libxml2-utils                 # documentation 

# ----- Use cached version of erlang
- name: create pkg dir
  file: 
    path: /home/{{gen_user}}/.pkg/asdf_erlang
    state: directory 
    group: "{{gen_user}}"
    owner: "{{gen_user}}"
  when: is_lanhost

- name: create installs dir
  file: 
    path: /home/{{gen_user}}/.asdf/installs/erlang
    state: directory 
    group: "{{gen_user}}"
    owner: "{{gen_user}}"
  when: is_lanhost

- name: get ASDF erlang
  become_user: "{{gen_user}}"
  get_url:
    url:  http://{{cblob_host}}/asdf_erlang/erlang_{{erlang_vsn}}_{{host_arch}}.tar.gz
    dest: /home/{{gen_user}}/.pkg/asdf_erlang/erlang_{{erlang_vsn}}_{{host_arch}}.tar.gz
  when: is_lanhost

- name: untar ASDF erlang
  become_user: "{{gen_user}}"
  unarchive:
    src:  /home/{{gen_user}}/.pkg/asdf_erlang/erlang_{{erlang_vsn}}_{{host_arch}}.tar.gz
    dest: /home/{{gen_user}}/.asdf/installs/erlang
    creates: /home/{{gen_user}}/.asdf/installs/erlang/{{erlang_vsn}}
    remote_src: true
  when: is_lanhost
  
- name: Update .tool-versions (only on the control host)
  lineinfile:
    path: "/home/aleak/util/base_util/cfg/_tool-versions"
    regexp: '^erlang'
    line: "erlang {{ erlang_vsn }}"
    create: yes
  delegate_to: localhost

# ----- Install erlang from scratch 
- name: install erlang from scratch 
  command: "bash -ilc '.asdf/bin/asdf install erlang {{erlang_vsn}}'"
  args:
    creates: "/home/{{gen_user}}/.asdf/installs/erlang/{{erlang_vsn}}"
    chdir: "/home/{{ gen_user }}"
  become_user: "{{ gen_user }}"
  when: not is_lanhost

# ----- Common Tasks 
- name: reshim
  become_user: "{{gen_user}}"
  command: "bash -ilc 'asdf reshim erlang {{erlang_vsn}}'"
  when: is_lanhost

