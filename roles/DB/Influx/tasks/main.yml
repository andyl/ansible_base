---

# influxdb
# see:
# - http://influxdb.com/download/
# - http://influxdb.com/docs/v0.9/introduction/installation.html

- name: create pkg dir
  file: 
    path: /home/{{sys_user}}/.pkg 
    state: directory 
    group: "{{sys_user}}"
    owner: "{{sys_user}}"

- name: get influxdb deb file
  get_url: 
    url: http://dl.influxdata.com/influxdb/releases/influxdb_{{influx_version}}_amd64.deb
    dest: /home/{{sys_user}}/.pkg/influxdb_{{influx_version}}_amd64.deb
    group: "{{sys_user}}"
    owner: "{{sys_user}}"

- name: install package
  apt: deb=/home/{{sys_user}}/.pkg/influxdb_{{influx_version}}_amd64.deb

- name: install python dependencies
  pip: name={{item}}
  with_items:
    - influxdb

- name: setup logrotate
  template:
    src: logrotate
    dest: /etc/logrotate.d/influxdb

- name: install config file
  template: 
    src: influxdb.conf
    dest: /etc/influxdb/influxdb.conf
    owner: root 
    group: root
  notify: restart influxdb

- name: flush all outstanding handlers
  meta: flush_handlers

- name: setup admin user
  command: influx -execute "create user admin with password 'admin' with all privileges"
  ignore_errors: true

# - name: setup admin user
#   influxdb_user:
#     user_name:     admin
#     user_password: admin
#     admin: yes

- name: create database
  influxdb_database:
    username: "admin"
    password: "admin"
    hostname: "localhost"
    database_name: "{{ item }}"
    state: present
  with_items:
    - telegraf
    - stocks
    - ping
    - influx
    - cronlog
    - bootlog
    - backups
    - weather
    - bugm_log
    - bugm_stats
    
# chronograf

- name: get chronograf deb file
  become: no
  get_url:
    url: https://dl.influxdata.com/chronograf/releases/chronograf_{{chronograf_vsn}}_amd64.deb
    dest: /home/{{sys_user}}/.pkg/chronograf_{{chronograf_vsn}}_amd64.deb
    force: no
    validate_certs: no

- name: install chronograf package
  apt: deb=/home/{{sys_user}}/.pkg/chronograf_{{chronograf_vsn}}_amd64.deb

