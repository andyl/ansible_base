#! /usr/bin/env bash

# {{ansible_managed}}
# {{template_path}}

# description: btsync - peer to peer lan file sync 
# processname: btsync
# config:  /etc/btsync/btsync.conf
# pidfile: /var/run/btsync/btsync.pid

### BEGIN INIT INFO
# Provides:          btsync
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop for btsync
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.  This example start a
#                    single forking daemon capable of writing a pid
#                    file.  To get other behavoirs, implemend
#                    do_start(), do_stop() or other functions to
#                    override the defaults in /lib/init/init-d-script.
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=btsync
DESC="btsync"
DEFAULT=/etc/default/$NAME

LOG_DIR=/var/log/btsync
CONF_DIR=/etc/btsync
CONF_FILE=$CONF_DIR/btsync.conf
PID_FILE=/var/run/$NAME/$NAME.pid
DAEMON=/usr/sbin/$NAME

umask 0027

if [ `id -u` -ne 0 ]; then
	echo "You need root privileges to run this script"
	exit 4
fi

if [ ! -x $DAEMON ]; then
  echo "Program not installed or not executable"
  exit 5
fi

if [ -r /etc/default/rcS ]; then
	. /etc/default/rcS
fi

# overwrite settings from default file
if [ -f "$DEFAULT" ]; then
	. "$DEFAULT"
fi

DAEMON_OPTS="--config ${CONF_FILE} --log /var/log/btsync/btsync.log"

case "$1" in
  start)
	echo "Starting $DESC"

  killall $NAME

	# Prepare environment
	mkdir -p "$LOG_DIR" 

	# Start Daemon
	# start-stop-daemon --start -b --pidfile "$PID_FILE" --exec $DAEMON -- $DAEMON_OPTS
  /usr/sbin/$NAME $DAEMON_OPTS 
	return=$?
  echo END $return
	;;
  stop)
	echo "Stopping $DESC"
  killall $NAME
	echo 0
	;;
  status)
	ps aux | grep $NAME
  ;;
  restart)
	if [ -f "$PID_FILE" ]; then
		$0 stop
		sleep 1
	fi
	$0 start
	;;
  *)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 3
	;;
esac
