---

# ----- exit if wired ethernet is not present 

- name: Detect wired Ethernet interface
  shell: |
    ip -o link show | awk -F': ' '{print $2}' | grep -E '^(eno|eth|ens|enp)'
  register: ethernet_detection
  changed_when: false
  failed_when: false

- name: Set detected Ethernet interface
  set_fact:
    ovs_interface: "{{ ethernet_detection.stdout_lines[0] }}"
  when: ethernet_detection.stdout_lines | length > 0

- name: Check if wired Ethernet is present
  fail:
    msg: "No wired Ethernet interface detected. Exiting playbook."
  when: ethernet_detection.stdout_lines | length == 0

- name: Echo ethernet interface 
  debug: 
    msg: "The ovs_interface is: {{ ovs_interface }}"

# ----- OpenVSwitch install 

- name: Install Open vSwitch Dependencies 
  apt:
    pkg: "{{item}}"
    state: latest
  with_items: 
    - openvswitch-switch 
    - netplan.io 
    - net-tools

- name: Ensure OVS service is started and enabled
  systemd:
    name: openvswitch-switch
    state: started
    enabled: yes

# ----- Create OVS Bridge 

# - name: Create OVS bridge
#   openvswitch_bridge:
#     bridge: "{{ ovs_name }}"
#     state: present

# ----- Write config files 

- name: create netconf directory
  file: 
    path: "/home/{{gen_user}}/.netconf/{{inventory_hostname}}/backup"
    state: directory 
    group: "{{gen_user}}"
    owner: "{{gen_user}}"

- name: Detect network management system
  command: which netplan
  register: netplan_check
  ignore_errors: true
  changed_when: false

# netconf script 
# create /etc/netplan owned by root
# move every file (not symlink) to backup directory

- name: Configure networking based on system type
  block:
    - name: Configure for Netplan (Ubuntu 22.04+)
      template:
        src: netplan2.yaml.j2
        dest: /home/{{gen_user}}/.netconf/{{inventory_hostname}}/99-ovs-bridge.yaml
      when: netplan_check.rc == 0
      # notify: Apply Netplan changes

    - name: Configure for traditional networking
      template:
        src: interfaces_config.j2
        # dest: /etc/network/interfaces.d/ovs-bridge
        dest: /home/{{gen_user}}/.netconf/{{inventory_hostname}}/ovs_bridge
      when: netplan_check.rc != 0
      # notify: Restart networking

    - name: Configure for Raspberry Pi (if-up/if-down)
      template:
        src: rpi_interfaces.j2
        # dest: /etc/network/interfaces
        dest: /home/{{gen_user}}/.netconf/{{inventory_hostname}}/rpi_interfaces
      when: 
        - netplan_check.rc != 0
        - ansible_facts['distribution'] == "Debian"
        - ansible_facts['architecture'] == "armv7l" or ansible_facts['architecture'] == "aarch64"
      # notify: Restart networking

