# {{ansible_managed}}
# {{template_path}}

##############################################################################
# Production Plugins
##############################################################################

LoadPlugin memcached
<Plugin memcached>
	<Instance "local">
		Socket "/var/run/memcached.sock"
or:
		Host "127.0.0.1"
		Port "11211"
	</Instance>
</Plugin>

LoadPlugin nginx
<Plugin nginx>
	URL "http://localhost/status?auto"
	User "www-user"
	Password "secret"
	VerifyPeer false
	VerifyHost false
	CACert "/etc/ssl/ca.crt"
</Plugin>

LoadPlugin postgresql
<Plugin postgresql>
	<Query magic>
		Statement "SELECT magic FROM wizard WHERE host = $1;"
		Param hostname

		<Result>
			Type gauge
			InstancePrefix "magic"
			ValuesFrom "magic"
		</Result>
	</Query>

	<Query rt36_tickets>
		Statement "SELECT COUNT(type) AS count, type \\
		                  FROM (SELECT CASE \\
		                               WHEN resolved = 'epoch' THEN 'open' \\
		                               ELSE 'resolved' END AS type \\
		                               FROM tickets) type \\
		                  GROUP BY type;"

		<Result>
			Type counter
			InstancePrefix "rt36_tickets"
			InstancesFrom "type"
			ValuesFrom "count"
		</Result>
	</Query>

	<Writer sqlstore>
		# See /usr/share/doc/collectd-core/examples/postgresql/collectd_insert.sql for details
		Statement "SELECT collectd_insert($1, $2, $3, $4, $5, $6, $7, $8, $9);"
		StoreRates true
	</Writer>

	<Database foo>
		Host "hostname"
		Port 5432
		User "username"
		Password "secret"

		SSLMode "prefer"
		KRBSrvName "kerberos_service_name"

		Query magic
	</Database>

	<Database bar>
		Interval 60
		Service "service_name"

		Query backend # predefined
		Query rt36_tickets
	</Database>

	<Database qux>
		Service "collectd_store"
		Writer sqlstore
		# see collectd.conf(5) for details
		CommitInterval 30
	</Database>
</Plugin>

